definitions:
  app.CheckItemReviewDTO:
    properties:
      agree:
        type: integer
      desc:
        type: string
      disagree:
        type: integer
      has_result:
        description: HasResult if true, the pass is the result, otherwise the pass
          is meaningless.
        type: boolean
      id:
        type: string
      name:
        type: string
      owner:
        type: string
      pass:
        type: boolean
      reviews:
        items:
          $ref: '#/definitions/app.UserCheckItemReviewDTO'
        type: array
    type: object
  app.NewSoftwarePkgDTO:
    properties:
      id:
        type: string
    type: object
  app.SoftwarePkgCodeFileDTO:
    properties:
      download_addr:
        type: string
      name:
        type: string
      src:
        type: string
    type: object
  app.SoftwarePkgDTO:
    properties:
      applied_at:
        type: string
      ci_status:
        type: string
      committers:
        items:
          type: string
        type: array
      desc:
        type: string
      id:
        type: string
      importer:
        type: string
      logs:
        items:
          $ref: '#/definitions/app.SoftwarePkgOperationLogDTO'
        type: array
      phase:
        type: string
      pkg_name:
        type: string
      platform:
        type: string
      reason:
        type: string
      repo_link:
        type: string
      reviews:
        $ref: '#/definitions/app.SoftwarePkgReviewDTO'
      sig:
        type: string
      spec:
        $ref: '#/definitions/app.SoftwarePkgCodeFileDTO'
      srpm:
        $ref: '#/definitions/app.SoftwarePkgCodeFileDTO'
      upstream:
        type: string
    type: object
  app.SoftwarePkgOperationLogDTO:
    properties:
      action:
        type: string
      time:
        type: string
      user:
        type: string
    type: object
  app.SoftwarePkgReviewDTO:
    properties:
      items:
        items:
          $ref: '#/definitions/app.CheckItemReviewDTO'
        type: array
      reviewers:
        items:
          type: string
        type: array
    type: object
  app.SoftwarePkgSummariesDTO:
    properties:
      pkgs:
        items:
          $ref: '#/definitions/app.SoftwarePkgSummaryDTO'
        type: array
      total:
        type: integer
    type: object
  app.SoftwarePkgSummaryDTO:
    properties:
      applied_at:
        type: string
      ci_status:
        type: string
      desc:
        type: string
      id:
        type: string
      importer:
        type: string
      phase:
        type: string
      pkg_name:
        type: string
      platform:
        type: string
      repo_link:
        type: string
      sig:
        type: string
    type: object
  app.TranslatedReveiwCommentDTO:
    properties:
      content:
        type: string
    type: object
  app.UserCheckItemReviewDTO:
    properties:
      account:
        type: string
      comment:
        type: string
      owner:
        description: if the reviewer is the owner of item
        type: boolean
      pass:
        type: boolean
    type: object
  controller.ResponseData:
    properties:
      code:
        type: string
      data: {}
      msg:
        type: string
    type: object
  controller.checkCommittersResp:
    properties:
      invalid_committers:
        items:
          type: string
        type: array
    type: object
  controller.checkItemReviewInfo:
    properties:
      comment:
        type: string
      id:
        type: string
      pass:
        type: boolean
    required:
    - id
    type: object
  controller.claSingedResp:
    properties:
      signed:
        type: boolean
    type: object
  controller.reqToAbandonPkg:
    properties:
      comment:
        type: string
    type: object
  controller.reqToUpdateSoftwarePkg:
    properties:
      committers:
        items:
          type: string
        type: array
      desc:
        type: string
      reason:
        type: string
      repo_link:
        type: string
      sig:
        type: string
      spec_url:
        type: string
      src_rpm_url:
        type: string
      upstream:
        type: string
    type: object
  controller.reviewCommentRequest:
    properties:
      comment:
        type: string
    required:
    - comment
    type: object
  controller.reviewRequest:
    properties:
      reviews:
        items:
          $ref: '#/definitions/controller.checkItemReviewInfo'
        type: array
    required:
    - reviews
    type: object
  controller.softwarePkgRepoRequest:
    properties:
      committers:
        items:
          type: string
        type: array
      repo_link:
        type: string
    required:
    - committers
    - repo_link
    type: object
  controller.softwarePkgRequest:
    properties:
      committers:
        items:
          type: string
        type: array
      desc:
        type: string
      pkg_name:
        type: string
      reason:
        type: string
      repo_link:
        type: string
      sig:
        type: string
      spec_url:
        type: string
      src_rpm_url:
        type: string
      upstream:
        type: string
    required:
    - committers
    - desc
    - pkg_name
    - reason
    - repo_link
    - sig
    - spec_url
    - src_rpm_url
    - upstream
    type: object
  controller.translationCommentRequest:
    properties:
      language:
        type: string
    type: object
  sigvalidator.Sig:
    properties:
      en_feature:
        type: string
      en_group:
        type: string
      feature:
        type: string
      group:
        type: string
      sig_names:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/cla:
    get:
      consumes:
      - application/json
      description: verify cla
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.claSingedResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: verify cla
      tags:
      - CLA
  /v1/sig:
    get:
      consumes:
      - application/json
      description: list sigs
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sigvalidator.Sig'
      summary: list sigs
      tags:
      - Sig
  /v1/softwarepkg:
    get:
      consumes:
      - application/json
      description: list software packages
      parameters:
      - description: phase of the softwarepkg
        in: query
        name: phase
        type: string
      - description: name of the softwarepkg
        in: query
        name: pkg_name
        type: string
      - description: importer of the softwarePkg
        in: query
        name: importer
        type: string
      - description: platform of the softwarePkg
        in: query
        name: platform
        type: string
      - description: last software pkg id of previous page
        in: query
        name: last_id
        type: string
      - description: whether count total num of the pkgs
        in: query
        name: count
        type: boolean
      - description: page num which starts from 1
        in: query
        name: page_num
        type: integer
      - description: count per page
        in: query
        name: count_per_page
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.SoftwarePkgSummariesDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: list software packages
      tags:
      - SoftwarePkg
    post:
      consumes:
      - application/json
      description: apply a new software package
      parameters:
      - description: body of applying a new software package
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/controller.softwarePkgRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/app.NewSoftwarePkgDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: apply a new software package
      tags:
      - SoftwarePkg
  /v1/softwarepkg/:id:
    put:
      consumes:
      - application/json
      description: update application of software package
      parameters:
      - description: id of software package
        in: path
        name: id
        required: true
        type: string
      - description: body of updating software package application
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/controller.reqToUpdateSoftwarePkg'
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: update application of software package
      tags:
      - SoftwarePkg
  /v1/softwarepkg/{id}:
    get:
      consumes:
      - application/json
      description: get software package
      parameters:
      - description: id of software package
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.SoftwarePkgDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: get software package
      tags:
      - SoftwarePkg
  /v1/softwarepkg/{id}/abandon:
    put:
      consumes:
      - application/json
      description: abandon software package
      parameters:
      - description: id of software package
        in: path
        name: id
        required: true
        type: string
      - description: comment
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToAbandonPkg'
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: abandon software package
      tags:
      - SoftwarePkg
  /v1/softwarepkg/{id}/reject:
    put:
      consumes:
      - application/json
      description: reject software package
      parameters:
      - description: id of software package
        in: path
        name: id
        required: true
        type: string
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: reject software package
      tags:
      - SoftwarePkg
  /v1/softwarepkg/{id}/retest:
    put:
      consumes:
      - application/json
      description: rerun ci of software package
      parameters:
      - description: id of software package
        in: path
        name: id
        required: true
        type: string
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: rerun ci of software package
      tags:
      - SoftwarePkg
  /v1/softwarepkg/{id}/review:
    get:
      consumes:
      - application/json
      description: get user review on software package
      parameters:
      - description: id of software package
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.SoftwarePkgDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: get user review on software package
      tags:
      - SoftwarePkg
    post:
      consumes:
      - application/json
      description: review software package
      parameters:
      - description: id of software package
        in: path
        name: id
        required: true
        type: string
      - description: body of reviewing a software package
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reviewRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: review software package
      tags:
      - SoftwarePkg
  /v1/softwarepkg/{id}/review/comment:
    get:
      consumes:
      - application/json
      description: list software package review comment
      parameters:
      - description: id of software package
        in: path
        name: id
        required: true
        type: string
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: list software package review comment
      tags:
      - SoftwarePkg
    post:
      consumes:
      - application/json
      description: create a new software package review comment
      parameters:
      - description: body of creating a new software package review comment
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/controller.reviewCommentRequest'
      - description: id of software package
        in: path
        name: id
        required: true
        type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: create a new software package review comment
      tags:
      - SoftwarePkg
  /v1/softwarepkg/{id}/review/comment/{cid}/translate:
    post:
      consumes:
      - application/json
      description: translate review comment
      parameters:
      - description: id of software package
        in: path
        name: id
        required: true
        type: string
      - description: cid of review comment
        in: path
        name: cid
        required: true
        type: string
      - description: body of translate review comment
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/controller.translationCommentRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/app.TranslatedReveiwCommentDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: translate review comment
      tags:
      - SoftwarePkg
  /v1/softwarepkg/committers:
    post:
      consumes:
      - application/json
      description: check committer of software package
      parameters:
      - description: body of checking committers
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.softwarePkgRepoRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.checkCommittersResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: check committer of software package
      tags:
      - SoftwarePkg
swagger: "2.0"
